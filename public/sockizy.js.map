{"version":3,"sources":["sockizyES6.js"],"names":["io","module","SEE","EE","_events","Object","create","type","listener","ev","_arrayCloneWith","length","argsLen","arguments","evLen","pop","Array","indexOf","_arrayCloneWithout","eventName","events","args","error","Error","e","context","apply","i","len","arr","n","copy","t","exports","packer","holyBuffer","Buffer","MAX_ARGUMENTS_LENGTH","K_MAX_LENGTH","alloc","byteLength","prototype","write","toString","utf8ToBytes","string","units","Infinity","codePoint","leadSurrogate","bytes","charCodeAt","push","utf8Slice","buf","start","end","Math","min","res","firstByte","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","createBuffer","RangeError","Uint8Array","size","offset","remaining","blitBuffer","encoding","swap","b","m","codePoints","String","fromCharCode","slice","isBigEndian","a","Uint32Array","buffer","byteOffset","sysOffset","idUI16Buf","Uint16Array","idUI8Buf","createPacket","getId","schema","useHolderArray","holderNew","isPrimitive","schLen","fields","buffers","zeroUI16","pktDataHolder","pktMinSize","pktDynamicSize","pktBufStrict","pktBufPack","TYPE_BIN","TYPE_STR","TYPE_INT","TYPE_UINT","TYPE_FLOAT","TYPE_JSON","split","name","shift","subType","getTypeId","replace","parseInt","buildTypedBuf","bufType","bufAType","bufBytes","bufABytes","pack","unpack","id","data","isArray","tIdx","fieldIdx","pktSize","field","input","JSON","stringify","_blen","isNaN","isFinite","reverse","result","l","bin","cbEndInfo","target","pktOffset","pktOffsetStart","byteLen","needMem","parse","BYTES_PER_ELEMENT","Int8Array","Int16Array","Int32Array","Float32Array","Float64Array","src","dst","url","options","WSocket","window","WebSocket","MozWebSocket","defineProperty","Io","_reconnectionDelay","max","reconnectionDelay","_reconnectionAttempts","reconnectionAttempts","_reconnectionAttemptsCount","_packMapByName","Map","_unpackMapById","_id","genId","reconnecting","CONNECTING","OPEN","CLOSING","CLOSED","tWsUrlParse","trim","wsUrl","wsProtocol","wsSecProtocol","match","secure","document","location","protocol","_connect","_pack","send","st","readyState","_ws","_emit","code","reason","close","namespace","shared","forEach","srz","set","packets","callback","keys","testName","r","some","w","onmessage","wsOnMessage","bind","onopen","wsOnOpen","onclose","wsOnClose","onerror","wsOnError","binaryType","get","bufferedAmount","socket","event","listenerCount","dataByteLength","pkt","pktSchema","message","cbMoveOffset","rcAttemptsCount","wasClean","setTimeout","_reconnect","crypto","uuidv4","guid","s4","floor","random","substring","c","getRandomValues"],"mappings":"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","file":"sockizy.js","sourcesContent":["const io = (function(module) {\r\n'use strict';\r\n\r\n\r\n//-----------------------------------------------------\r\n//\r\n// Author: Daeren\r\n// Site: 666.io\r\n//\r\n//-----------------------------------------------------\r\n\r\n\"use strict\";\r\n\r\n//-----------------------------------------------------\r\n\r\nconst SEE = (function() {\r\n    class EE {\r\n        constructor() {\r\n            this._events = Object.create(null);\r\n        }\r\n\r\n\r\n        on(type, listener) {\r\n            const ev = this._events[type];\r\n\r\n            if(typeof(ev) === \"function\") {\r\n                this._events[type] = [ev, listener];\r\n            }\r\n            else {\r\n                this._events[type] = ev ? this._arrayCloneWith(ev, ev.length, listener) : listener;\r\n            }\r\n\r\n            return this;\r\n        }\r\n\r\n        off(type, listener) {\r\n            const argsLen = arguments.length;\r\n\r\n            //--------------]>\r\n\r\n            if(!argsLen) {\r\n                this._events = Object.create(null);\r\n                return this;\r\n            }\r\n\r\n            //--------------]>\r\n\r\n            const ev = this._events[type];\r\n\r\n            if(typeof(ev) === \"function\") {\r\n                if(argsLen === 1 || ev === listener) {\r\n                    this._events[type] = null;\r\n                }\r\n\r\n                return this;\r\n            }\r\n\r\n            //--------------]>\r\n\r\n            const evLen = ev && ev.length;\r\n\r\n            //--------------]>\r\n\r\n            if(!evLen) {\r\n                return this;\r\n            }\r\n\r\n            //--------------]>\r\n\r\n            if(argsLen === 1) {\r\n                if(evLen === 1) {\r\n                    ev.pop();\r\n                }\r\n                else {\r\n                    this._events[type] = new Array();\r\n                }\r\n            }\r\n            else if(evLen === 1) {\r\n                if(ev[0] === listener) {\r\n                    ev.pop();\r\n                }\r\n            }\r\n            else if(ev.indexOf(listener) >= 0) {\r\n                this._events[type] = this._arrayCloneWithout(ev, evLen, listener);\r\n            }\r\n\r\n            //--------------]>\r\n\r\n            return this;\r\n        }\r\n\r\n        listenerCount(eventName) {\r\n            const events = this._events;\r\n\r\n            if(events) {\r\n                const ev = events[eventName];\r\n\r\n                if(typeof(ev) === \"function\") {\r\n                    return 1;\r\n                }\r\n                else if(ev) {\r\n                    return ev.length;\r\n                }\r\n            }\r\n\r\n            return 0;\r\n        }\r\n\r\n\r\n        _emit(type, ...args) {\r\n            const events = this._events[type];\r\n\r\n            //--------------]>\r\n\r\n            if(!events) {\r\n                if(type === \"error\") {\r\n                    const error = arguments[1];\r\n\r\n                    if(error instanceof(Error)) {\r\n                        throw error;\r\n                    }\r\n                    else {\r\n                        const e = new Error(`Unhandled \"error\" event. (${error})`);\r\n                        e.context = error;\r\n\r\n                        throw e;\r\n                    }\r\n                }\r\n\r\n                return false;\r\n            }\r\n\r\n            //--------------]>\r\n\r\n            if(typeof(events) === \"function\") {\r\n                events.apply(this, args);\r\n            }\r\n            else {\r\n                for(let i = 0, len = events.length; i < len; ++i) {\r\n                    events[i].apply(this, args);\r\n                }\r\n            }\r\n\r\n            //--------------]>\r\n\r\n            return true;\r\n        }\r\n\r\n        _arrayCloneWithout(arr, n, listener) {\r\n            const copy = new Array(n - 1);\r\n\r\n            let t,\r\n                i = 0;\r\n\r\n            while(n--) {\r\n                t = arr[n];\r\n\r\n                if(listener !== t) {\r\n                    copy[i] = t;\r\n                    ++i;\r\n                }\r\n            }\r\n\r\n            return copy;\r\n        }\r\n\r\n        _arrayCloneWith(arr, n, listener) {\r\n            const copy = new Array(n + 1);\r\n\r\n            copy[n] = listener;\r\n\r\n            while(n--) {\r\n                copy[n] = arr[n];\r\n            }\r\n\r\n            return copy;\r\n        }\r\n    }\r\n\r\n    //-----------------------]>\r\n\r\n    return EE;\r\n})();\r\n\r\n//-----------------------------------------------------\r\n\r\nmodule.exports = SEE;\r\n\r\n//-----------------------------------------------------\r\n//\r\n// Author: Daeren\r\n// Site: 666.io\r\n//\r\n//-----------------------------------------------------\r\n\r\n\"use strict\";\r\n\r\n//-----------------------------------------------------\r\n\r\nconst packer = (function() {\r\n    const holyBuffer = typeof(Buffer) !== \"undefined\" ? Buffer : (function() {\r\n            const MAX_ARGUMENTS_LENGTH = 0x1000;\r\n            const K_MAX_LENGTH = 0x7fffffff;\r\n\r\n            const Buffer = function() {};\r\n\r\n            //---------------------]>\r\n\r\n            Buffer.alloc = alloc;\r\n            Buffer.byteLength = byteLength;\r\n\r\n            Buffer.prototype = Object.create(null);\r\n            Buffer.prototype.write = write;\r\n            Buffer.prototype.toString = toString;\r\n\r\n            //---------------------]>\r\n\r\n            return Buffer;\r\n\r\n            //---------------------]>\r\n\r\n            function utf8ToBytes(string, units) {\r\n                units = units || Infinity;\r\n\r\n                const length = string.length;\r\n\r\n                let codePoint;\r\n                let leadSurrogate = null;\r\n                let bytes = new Array();\r\n\r\n                for(let i = 0; i < length; ++i) {\r\n                    codePoint = string.charCodeAt(i);\r\n\r\n                    // is surrogate component\r\n                    if(codePoint > 0xD7FF && codePoint < 0xE000) {\r\n                        // last char was a lead\r\n                        if(!leadSurrogate) {\r\n                            // no lead yet\r\n                            if(codePoint > 0xDBFF) {\r\n                                // unexpected trail\r\n                                if((units -= 3) > -1) {\r\n                                    bytes.push(0xEF, 0xBF, 0xBD);\r\n                                }\r\n\r\n                                continue;\r\n                            }\r\n                            else if(i + 1 === length) {\r\n                                // unpaired lead\r\n                                if((units -= 3) > -1) {\r\n                                    bytes.push(0xEF, 0xBF, 0xBD);\r\n                                }\r\n\r\n                                continue;\r\n                            }\r\n\r\n                            // valid lead\r\n                            leadSurrogate = codePoint;\r\n\r\n                            continue;\r\n                        }\r\n\r\n                        // 2 leads in a row\r\n                        if(codePoint < 0xDC00) {\r\n                            if((units -= 3) > -1) {\r\n                                bytes.push(0xEF, 0xBF, 0xBD);\r\n                            }\r\n\r\n                            leadSurrogate = codePoint;\r\n\r\n                            continue;\r\n                        }\r\n\r\n                        // valid surrogate pair\r\n                        codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\r\n                    }\r\n                    else if(leadSurrogate) {\r\n                        // valid bmp char, but last char was a lead\r\n                        if((units -= 3) > -1) {\r\n                            bytes.push(0xEF, 0xBF, 0xBD);\r\n                        }\r\n                    }\r\n\r\n                    leadSurrogate = null;\r\n\r\n                    // encode utf8\r\n                    if(codePoint < 0x80) {\r\n                        if((units -= 1) < 0) {\r\n                            break;\r\n                        }\r\n\r\n                        bytes.push(codePoint);\r\n                    }\r\n                    else if(codePoint < 0x800) {\r\n                        if((units -= 2) < 0) {\r\n                            break;\r\n                        }\r\n\r\n                        bytes.push(\r\n                            codePoint >> 0x6 | 0xC0,\r\n                            codePoint & 0x3F | 0x80\r\n                        );\r\n                    }\r\n                    else if(codePoint < 0x10000) {\r\n                        if((units -= 3) < 0) {\r\n                            break;\r\n                        }\r\n\r\n                        bytes.push(\r\n                            codePoint >> 0xC | 0xE0,\r\n                            codePoint >> 0x6 & 0x3F | 0x80,\r\n                            codePoint & 0x3F | 0x80\r\n                        );\r\n                    }\r\n                    else if(codePoint < 0x110000) {\r\n                        if((units -= 4) < 0) {\r\n                            break;\r\n                        }\r\n\r\n                        bytes.push(\r\n                            codePoint >> 0x12 | 0xF0,\r\n                            codePoint >> 0xC & 0x3F | 0x80,\r\n                            codePoint >> 0x6 & 0x3F | 0x80,\r\n                            codePoint & 0x3F | 0x80\r\n                        );\r\n                    }\r\n                    else {\r\n                        throw new Error(\"Invalid code point\");\r\n                    }\r\n                }\r\n\r\n                return bytes;\r\n            }\r\n\r\n            function utf8Slice(buf, start, end) {\r\n                end = Math.min(buf.length, end);\r\n\r\n                const res = new Array();\r\n                let i = start;\r\n\r\n                while(i < end) {\r\n                    let firstByte = buf[i];\r\n                    let codePoint = null;\r\n                    let bytesPerSequence = (firstByte > 0xEF) ? 4\r\n                        : (firstByte > 0xDF) ? 3\r\n                            : (firstByte > 0xBF) ? 2\r\n                                : 1;\r\n\r\n                    if(i + bytesPerSequence <= end) {\r\n                        let secondByte, thirdByte, fourthByte, tempCodePoint;\r\n\r\n                        switch(bytesPerSequence) {\r\n                            case 1:\r\n                                if(firstByte < 0x80) {\r\n                                    codePoint = firstByte;\r\n                                }\r\n\r\n                                break;\r\n\r\n                            case 2:\r\n                                secondByte = buf[i + 1];\r\n\r\n                                if((secondByte & 0xC0) === 0x80) {\r\n                                    tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F);\r\n\r\n                                    if(tempCodePoint > 0x7F) {\r\n                                        codePoint = tempCodePoint;\r\n                                    }\r\n                                }\r\n\r\n                                break;\r\n\r\n                            case 3:\r\n                                secondByte = buf[i + 1];\r\n                                thirdByte = buf[i + 2];\r\n\r\n                                if((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\r\n                                    tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F);\r\n\r\n                                    if(tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\r\n                                        codePoint = tempCodePoint;\r\n                                    }\r\n                                }\r\n\r\n                                break;\r\n\r\n                            case 4:\r\n                                secondByte = buf[i + 1];\r\n                                thirdByte = buf[i + 2];\r\n                                fourthByte = buf[i + 3];\r\n\r\n                                if((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\r\n                                    tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F);\r\n\r\n                                    if(tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\r\n                                        codePoint = tempCodePoint;\r\n                                    }\r\n                                }\r\n                        }\r\n                    }\r\n\r\n                    if(codePoint === null) {\r\n                        // we did not generate a valid codePoint so insert a\r\n                        // replacement char (U+FFFD) and advance only 1 byte\r\n                        codePoint = 0xFFFD;\r\n                        bytesPerSequence = 1;\r\n                    }\r\n                    else if(codePoint > 0xFFFF) {\r\n                        // encode to utf16 (surrogate pair dance)\r\n                        codePoint -= 0x10000;\r\n                        res.push(codePoint >>> 10 & 0x3FF | 0xD800);\r\n                        codePoint = 0xDC00 | codePoint & 0x3FF;\r\n                    }\r\n\r\n                    res.push(codePoint);\r\n                    i += bytesPerSequence;\r\n                }\r\n\r\n                return decodeCodePointsArray(res);\r\n            }\r\n\r\n            function createBuffer(length) {\r\n                if(length > K_MAX_LENGTH) {\r\n                    throw new RangeError(\"Invalid typed array length\");\r\n                }\r\n\r\n                const buf = new Uint8Array(length);\r\n\r\n                // buf.__proto__ = Buffer.prototype;\r\n                buf.write = Buffer.prototype.write;\r\n                buf.toString = Buffer.prototype.toString;\r\n\r\n                return buf;\r\n            }\r\n\r\n            function byteLength(string) {\r\n                return utf8ToBytes(string).length;\r\n            }\r\n\r\n            //--------)>\r\n\r\n            function alloc(size) {\r\n                return createBuffer(size);\r\n            }\r\n\r\n            //--------)>\r\n\r\n            function write(string, offset, length) {\r\n                offset = offset || 0;\r\n                length = length || this.length;\r\n\r\n                const remaining = this.length - offset;\r\n\r\n                if(!length || length > remaining) {\r\n                    length = remaining;\r\n                }\r\n\r\n                return blitBuffer(utf8ToBytes(string, this.length - offset), this, offset, length);\r\n            }\r\n\r\n            function toString(encoding, start, end) {\r\n                start = start || 0;\r\n                end = end || this.length;\r\n\r\n                return end === 0 ? \"\" : utf8Slice(this, start, end);\r\n            }\r\n\r\n            //--------)>\r\n\r\n            function swap(b, n, m) {\r\n                const i = b[n];\r\n\r\n                b[n] = b[m];\r\n                b[m] = i;\r\n            }\r\n\r\n            function decodeCodePointsArray(codePoints) {\r\n                const len = codePoints.length;\r\n\r\n                if(len <= MAX_ARGUMENTS_LENGTH) {\r\n                    return String.fromCharCode.apply(String, codePoints); // avoid extra slice()\r\n                }\r\n\r\n                // Decode in chunks to avoid \"call stack size exceeded\".\r\n                let res = \"\";\r\n                let i = 0;\r\n\r\n                while(i < len) {\r\n                    res += String.fromCharCode.apply(\r\n                        String,\r\n                        codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\r\n                    );\r\n                }\r\n\r\n                return res;\r\n            }\r\n        })();\r\n\r\n    //-------------------------]>\r\n\r\n    const isBigEndian   = (function() {\r\n        const a = new Uint32Array([0x12345678]);\r\n        const b = new Uint8Array(a.buffer, a.byteOffset, a.byteLength);\r\n\r\n        return b[0] === 0x12;\r\n    })();\r\n\r\n    const sysOffset     = 2;\r\n\r\n    const idUI16Buf     = new Uint16Array(1);\r\n    const idUI8Buf      = new Uint8Array(idUI16Buf.buffer);\r\n\r\n    //-------------------------]>\r\n\r\n    return {isBigEndian, createPacket, getId};\r\n\r\n    //-------------------------]>\r\n\r\n    function createPacket(schema, useHolderArray, holderNew) {\r\n        if(!schema) {\r\n            schema = [];\r\n        }\r\n\r\n        //-----------------]>\r\n\r\n        const isPrimitive   = typeof(schema) === \"string\";\r\n\r\n        const schLen        = isPrimitive ? 1 : schema.length;\r\n\r\n        const fields        = new Array(schLen);\r\n        const buffers       = new Array(schLen);\r\n\r\n        const zeroUI16      = new Uint8Array(2);\r\n\r\n        let pktDataHolder   = useHolderArray ? new Array() : Object.create(null),\r\n            pktMinSize      = 0,\r\n            pktDynamicSize  = false,\r\n\r\n            pktBufStrict    = null,\r\n            pktBufPack      = null;\r\n\r\n        //-----------------]>\r\n\r\n        const TYPE_BIN      = 1;\r\n        const TYPE_STR      = 2;\r\n        const TYPE_INT      = 4;\r\n        const TYPE_UINT     = 8;\r\n        const TYPE_FLOAT    = 16;\r\n        const TYPE_JSON     = 32;\r\n\r\n        //-----------------]>\r\n\r\n        for(let e, i = 0; i < schLen; ++i) {\r\n            e = isPrimitive ? [\"\", schema] : schema[i].split(\":\");\r\n\r\n            //---------]>\r\n\r\n            const name      = e.shift();\r\n            const subType   = e.shift();\r\n\r\n            const type      = getTypeId(subType.replace(/[\\d\\[\\]]/g, \"\"));\r\n            const size      = parseInt(subType.replace(/\\D/g, \"\"), 10) || 0;\r\n\r\n            const [\r\n                bytes,\r\n                bufType,\r\n                bufAType\r\n            ]               = buildTypedBuf(type, size);\r\n\r\n            const bufBytes  = (type & (TYPE_BIN | TYPE_STR)) ? null : new Uint8Array(bufType.buffer);\r\n            const bufABytes = bufAType ? new Uint8Array(bufAType.buffer) : null;\r\n\r\n            //---------]>\r\n\r\n            fields[i] = [name, type, bytes, bufType, bufBytes, bufAType, bufABytes];\r\n\r\n            pktMinSize += bytes;\r\n\r\n            if(!pktDynamicSize && (type & (TYPE_BIN | TYPE_STR))) {\r\n                pktDynamicSize = true;\r\n            }\r\n        }\r\n\r\n        pktMinSize += sysOffset;\r\n\r\n        if(!pktDynamicSize) {\r\n            pktBufStrict = new Uint8Array(pktMinSize);\r\n        }\r\n\r\n        //-----------------]>\r\n\r\n        return {pack, unpack};\r\n\r\n        //-----------------]>\r\n\r\n        function pack(id, data) {\r\n            const isArray   = Array.isArray(data);\r\n\r\n            let tIdx,\r\n                fieldIdx    = schLen,\r\n                pktSize     = sysOffset;\r\n\r\n            let field;\r\n            let name, type, bytes, bufType, bufBytes, bufAType, bufABytes;\r\n\r\n            let input;\r\n\r\n            //--------]>\r\n\r\n            while(fieldIdx--) {\r\n                field = fields[fieldIdx];\r\n                [name, type, bytes, bufType, bufBytes, bufAType, bufABytes] = field;\r\n\r\n                input = isPrimitive ? data : data[isArray ? fieldIdx : name];\r\n\r\n                //------]>\r\n\r\n                if(type & (TYPE_BIN | TYPE_STR)) {\r\n                    if(type & TYPE_JSON) {\r\n                        input = JSON.stringify(input);\r\n                    }\r\n\r\n                    if(input) {\r\n                        bytes += bufAType[0] = type & TYPE_BIN ? blitBuffer(input, bufType, bytes, input.byteLength) : bufType.write(input, bytes);\r\n\r\n                        bufBytes = bufType;\r\n                        bufType._blen = bytes;\r\n\r\n                        //-----]>\r\n\r\n                        if(isBigEndian) {\r\n                            bufType[0] = bufABytes[1];\r\n                            bufType[1] = bufABytes[0];\r\n                        }\r\n                        else {\r\n                            bufType[0] = bufABytes[0];\r\n                            bufType[1] = bufABytes[1];\r\n                        }\r\n                    }\r\n                    else {\r\n                        bufBytes = zeroUI16;\r\n                    }\r\n                }\r\n                else {\r\n                    if(input === null || isNaN(input) || !isFinite(input) || typeof(input) === \"undefined\") {\r\n                        bufType[0] = 0;\r\n                    }\r\n                    else {\r\n                        bufType[0] = input;\r\n\r\n                        if(isBigEndian && bufType.byteLength > 1) {\r\n                            bufBytes.reverse();\r\n                        }\r\n                    }\r\n                }\r\n\r\n                //------]>\r\n\r\n                if(pktBufStrict) {\r\n                    tIdx = 0;\r\n\r\n                    while(bytes--) {\r\n                        pktBufStrict[pktSize++] = bufBytes[tIdx++];\r\n                    }\r\n                }\r\n                else {\r\n                    buffers[fieldIdx] = bufBytes;\r\n                    pktSize += bytes;\r\n                }\r\n            }\r\n\r\n            //--------]>\r\n\r\n            let result = pktBufStrict;\r\n\r\n            //--------]>\r\n\r\n            if(!result) {\r\n                result = pktBufPack && pktBufPack.length === pktSize ? pktBufPack : (pktBufPack = new Uint8Array(pktSize));\r\n\r\n                fieldIdx = schLen;\r\n                tIdx = sysOffset;\r\n\r\n                //--------]>\r\n\r\n                while(fieldIdx--) {\r\n                    for(let b = buffers[fieldIdx], i = 0, l = (b._blen || b.length); i < l; ++i) {\r\n                        result[tIdx++] = b[i];\r\n                    }\r\n                }\r\n            }\r\n\r\n            //--------]>\r\n\r\n            idUI16Buf[0] = id;\r\n\r\n            result[0] = idUI8Buf[0];\r\n            result[1] = idUI8Buf[1];\r\n\r\n            //--------]>\r\n\r\n            return result;\r\n        }\r\n\r\n        function unpack(bin, offset, length, cbEndInfo, target) {\r\n            if(!schLen) {\r\n                if(cbEndInfo) {\r\n                    cbEndInfo(sysOffset);\r\n                }\r\n\r\n                return null;\r\n            }\r\n\r\n            if(!bin || typeof(bin) !== \"object\" || pktBufStrict && bin.byteLength !== pktMinSize || bin.byteLength < pktMinSize) {\r\n                return void(0);\r\n            }\r\n\r\n            if(!isPrimitive) {\r\n                target = target || (holderNew ? (useHolderArray ? new Array() : Object.create(null)) : pktDataHolder);\r\n            }\r\n\r\n            //--------]>\r\n\r\n            let field,\r\n                fieldIdx = schLen,\r\n\r\n                name, type, bytes, bufType, bufBytes, bufAType, bufABytes;\r\n\r\n            let pktOffset           = offset + sysOffset;\r\n\r\n            const pktOffsetStart    = pktOffset;\r\n\r\n            //--------]>\r\n\r\n            while(fieldIdx--) {\r\n                [name, type, bytes, bufType, bufBytes, bufAType, bufABytes] = fields[fieldIdx];\r\n\r\n                //------]>\r\n\r\n                for(let i = 0; i < bytes; ++i) {\r\n                    if(pktOffset >= length) {\r\n                        return void(0);\r\n                    }\r\n\r\n                    if(bufAType) {\r\n                        bufABytes[i] = bin[pktOffset++];\r\n                    }\r\n                    else {\r\n                        bufBytes[i] = bin[pktOffset++];\r\n                    }\r\n                }\r\n\r\n                //------]>\r\n\r\n                if(type & (TYPE_BIN | TYPE_STR)) {\r\n                    if(isBigEndian) {\r\n                        bufABytes.reverse();\r\n                    }\r\n\r\n                    //--------]>\r\n\r\n                    const byteLen = bufAType[0];\r\n\r\n                    //--------]>\r\n\r\n                    if(!byteLen || byteLen >= length) {\r\n                        field = type & (TYPE_BIN | TYPE_JSON) ? null : \"\";\r\n                    }\r\n                    else {\r\n                        const needMem = Math.min(bufType.length - bytes, length, byteLen);\r\n                        const buf = type & TYPE_BIN ? holyBuffer.alloc(needMem) : bufType;\r\n\r\n                        //-------]>\r\n\r\n                        for(let i = 0; i < needMem; ++i, ++pktOffset) {\r\n                            buf[i] = bin[pktOffset];\r\n                        }\r\n\r\n                        //-------]>\r\n\r\n                        field = type & TYPE_BIN ? buf : buf.toString(\"utf8\", 0, needMem);\r\n\r\n                        if(type & TYPE_JSON) {\r\n                            try {\r\n                                field = JSON.parse(field);\r\n                            }\r\n                            catch(e) {\r\n                                field = null;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    if(isBigEndian && bufType.byteLength > 1) {\r\n                        bufBytes.reverse();\r\n                    }\r\n\r\n                    field = bufType[0];\r\n                }\r\n\r\n                //------]>\r\n\r\n                if(isPrimitive) {\r\n                    target = field;\r\n                }\r\n                else {\r\n                    if(useHolderArray) {\r\n                        name = fieldIdx;\r\n                    }\r\n\r\n                    target[name] = field;\r\n                }\r\n            }\r\n\r\n            if(cbEndInfo) {\r\n                cbEndInfo(sysOffset + pktOffset - pktOffsetStart);\r\n            }\r\n\r\n            //--------]>\r\n\r\n            return target;\r\n        }\r\n\r\n        //-----------------]>\r\n\r\n        function buildTypedBuf(type, size) {\r\n            if(type & TYPE_BIN) {\r\n                return [Uint16Array.BYTES_PER_ELEMENT, holyBuffer.alloc((size || 1024) + Uint16Array.BYTES_PER_ELEMENT), new Uint16Array(1)];\r\n            }\r\n\r\n            if(type & TYPE_JSON) {\r\n                return [Uint16Array.BYTES_PER_ELEMENT, holyBuffer.alloc((size || 8192) + Uint16Array.BYTES_PER_ELEMENT), new Uint16Array(1)];\r\n            }\r\n\r\n            if(type & TYPE_STR) {\r\n                return [Uint16Array.BYTES_PER_ELEMENT, holyBuffer.alloc((size || 256) + Uint16Array.BYTES_PER_ELEMENT), new Uint16Array(1)];\r\n            }\r\n\r\n            switch(type) {\r\n                case TYPE_INT:\r\n                    switch(size) {\r\n                        case 8: return [Int8Array.BYTES_PER_ELEMENT, new Int8Array(1)];\r\n                        case 16: return [Int16Array.BYTES_PER_ELEMENT, new Int16Array(1)];\r\n                        case 32: return [Int32Array.BYTES_PER_ELEMENT, new Int32Array(1)];\r\n\r\n                        default:\r\n                            throw new Error(`Unknown size: ${size}`);\r\n                    }\r\n\r\n\r\n                case TYPE_UINT:\r\n                    switch(size) {\r\n                        case 8: return [Uint8Array.BYTES_PER_ELEMENT, new Uint8Array(1)];\r\n                        case 16: return [Uint16Array.BYTES_PER_ELEMENT, new Uint16Array(1)];\r\n                        case 32: return [Uint32Array.BYTES_PER_ELEMENT, new Uint32Array(1)];\r\n\r\n                        default:\r\n                            throw new Error(`Unknown size: ${size}`);\r\n                    }\r\n\r\n\r\n                case TYPE_FLOAT:\r\n                    switch(size) {\r\n                        case 32: return [Float32Array.BYTES_PER_ELEMENT, new Float32Array(1)];\r\n                        case 64: return [Float64Array.BYTES_PER_ELEMENT, new Float64Array(1)];\r\n\r\n                        default:\r\n                            throw new Error(`Unknown size: ${size}`);\r\n                    }\r\n\r\n                default:\r\n                    throw new Error(`Unknown type: ${type}`);\r\n            }\r\n        }\r\n\r\n        function getTypeId(type) {\r\n            switch(type) {\r\n                case \"b\":\r\n                case \"bin\":\r\n                    return TYPE_BIN;\r\n\r\n                case \"j\":\r\n                case \"json\":\r\n                    return TYPE_STR | TYPE_JSON;\r\n\r\n                case \"s\":\r\n                case \"str\":\r\n                    return TYPE_STR;\r\n\r\n                case \"i\":\r\n                case \"int\":\r\n                    return TYPE_INT;\r\n\r\n                case \"u\":\r\n                case \"uint\":\r\n                    return TYPE_UINT;\r\n\r\n                case \"f\":\r\n                case \"float\":\r\n                    return TYPE_FLOAT;\r\n\r\n                default:\r\n                    throw new Error(`Unknown type: ${type}`);\r\n            }\r\n        }\r\n    }\r\n\r\n    //-----------)>\r\n\r\n    function getId(data) {\r\n        idUI8Buf[0] = data[0];\r\n        idUI8Buf[1] = data[1];\r\n\r\n        if(isBigEndian) {\r\n            idUI8Buf.reverse();\r\n        }\r\n\r\n        return idUI16Buf[0];\r\n    }\r\n\r\n    //-----------)>\r\n\r\n    function blitBuffer(src, dst, offset, length) {\r\n        let i;\r\n\r\n        for(i = 0; i < length; ++i) {\r\n            if((i + offset >= dst.byteLength) || (i >= src.byteLength)) {\r\n                break;\r\n            }\r\n\r\n            dst[i + offset] = src[i];\r\n        }\r\n\r\n        return i;\r\n    }\r\n})();\r\n\r\n//-----------------------------------------------------\r\n\r\nmodule.exports = packer;\r\n\r\n//-----------------------------------------------------\r\n//\r\n// Author: Daeren\r\n// Site: 666.io\r\n//\r\n//-----------------------------------------------------\r\n\r\n\"use strict\";\r\n\r\n//-----------------------------------------------------\r\n\r\nmodule.exports = toString;\r\n\r\n//-----------------------------------------------------\r\n\r\nfunction toString(data) {\r\n    if(data === null) {\r\n        return \"\";\r\n    }\r\n\r\n    switch(typeof(data)) {\r\n        case \"string\":      return data;\r\n\r\n        case \"undefined\":   return \"\";\r\n        case \"boolean\":     return data ? \"true\" : \"false\";\r\n        case \"number\":      return isNaN(data) ? \"\" : data + \"\";\r\n        case \"symbol\":      return data.toString();\r\n\r\n        default:            return JSON.stringify(data);\r\n    }\r\n}\r\n//-----------------------------------------------------\r\n//\r\n// Author: Daeren\r\n// Site: 666.io\r\n//\r\n//-----------------------------------------------------\r\n\r\nreturn function(url, options = {}) {\r\n    const WSocket = window.WebSocket || window.MozWebSocket;\r\n\r\n    //---------------]>\r\n\r\n    if(!Uint8Array.prototype.slice) {\r\n        Object.defineProperty(Uint8Array.prototype, \"slice\", {\r\n            \"value\": Array.prototype.slice\r\n        });\r\n    }\r\n\r\n    //---------------]>\r\n\r\n    class Io extends SEE {\r\n        constructor() {\r\n            super();\r\n\r\n            //-------]>\r\n\r\n            this._reconnectionDelay = 1000 * Math.max(1, options.reconnectionDelay || 0);\r\n            this._reconnectionAttempts = options.reconnectionAttempts || Infinity;\r\n            this._reconnectionAttemptsCount = 0;\r\n\r\n            this._packMapByName = new Map();\r\n            this._unpackMapById = new Array();\r\n            this._id = genId();\r\n\r\n            //-------]>\r\n\r\n            this.reconnecting = false;\r\n\r\n            //-------]>\r\n\r\n            this.CONNECTING     = WSocket.CONNECTING;\r\n            this.OPEN           = WSocket.OPEN;\r\n            this.CLOSING        = WSocket.CLOSING;\r\n            this.CLOSED         = WSocket.CLOSED;\r\n\r\n            //-------]>\r\n\r\n            if(url) {\r\n                const tWsUrlParse = url.trim().split(/(^wss?:\\/\\/)/i);\r\n\r\n                const wsUrl = tWsUrlParse.pop().replace(/^[:\\/\\/]*/, \"\");\r\n                const wsProtocol = (tWsUrlParse.pop() || \"\").trim();\r\n                const wsSecProtocol = !!(wsProtocol && wsProtocol.match(/^wss:\\/\\//i));\r\n\r\n                let {secure} = options;\r\n\r\n                //------------]>\r\n\r\n                if(typeof(secure) === \"undefined\") {\r\n                    secure = wsProtocol ? wsSecProtocol : !!document.location.protocol.match(/^https/i);\r\n                }\r\n\r\n                //------------]>\r\n\r\n                this._connect((secure ? \"wss\" : \"ws\") + \"://\" + wsUrl + \"/?id=\" + this._id);\r\n            }\r\n        }\r\n\r\n\r\n        get bufferedAmount() {\r\n            return this._ws && this._ws.bufferedAmount || 0;\r\n        }\r\n\r\n        get readyState() {\r\n            return this._ws && this._ws.readyState || this.CLOSED;\r\n        }\r\n\r\n        get url() {\r\n            return this._ws && this._ws.url || \"\";\r\n        }\r\n\r\n\r\n        isSupported() {\r\n            return typeof(WSocket) !== \"undefined\";\r\n        }\r\n\r\n\r\n        emit(name, data) {\r\n            data = this._pack(name, data);\r\n\r\n            if(data) {\r\n                this.send(data);\r\n            }\r\n\r\n            return !!data;\r\n        }\r\n\r\n        text(data) {\r\n            this.send(toString(data));\r\n        }\r\n\r\n        json(data) {\r\n            this.send(JSON.stringify(data));\r\n        }\r\n\r\n        send(data) {\r\n            const st = this.readyState;\r\n\r\n            let error;\r\n\r\n            //------------]>\r\n\r\n            try {\r\n                if(st !== this.CLOSING && st !== this.CLOSED) {\r\n                    this._ws.send(data);\r\n                }\r\n                else {\r\n                    error = new Error(\"WebSocket is already in CLOSING or CLOSED state.\");\r\n                }\r\n            } catch(e) {\r\n                error = e;\r\n            }\r\n\r\n            if(error) {\r\n                this._emit(\"error\", error);\r\n            }\r\n        }\r\n\r\n\r\n        disconnect(code = 1000, reason = \"\") {\r\n            const st = this.readyState;\r\n\r\n            if(st !== this.CLOSING && st !== this.CLOSED) {\r\n                this._ws.close(code, reason);\r\n            }\r\n\r\n            //------------]>\r\n\r\n            return this;\r\n        }\r\n\r\n\r\n        packets(...args) {\r\n            let namespace, unpack, pack, shared;\r\n\r\n            //----------]>\r\n\r\n            if(typeof(arguments[0]) === \"string\") {\r\n                [namespace, pack, unpack, shared] = args;\r\n            }\r\n            else {\r\n                [pack, unpack, shared] = args;\r\n            }\r\n\r\n            namespace = namespace ? (namespace + \".\") : \"\";\r\n\r\n            //----------]>\r\n\r\n            forEach(unpack, (name, srz) => {\r\n                this._unpackMapById.push([namespace + name, srz]);\r\n            });\r\n\r\n            forEach(pack, (name, srz) => {\r\n                this._packMapByName.set(namespace + name, [this._packMapByName.size, srz]);\r\n            });\r\n\r\n            if(shared) {\r\n                return this.packets(shared, shared);\r\n            }\r\n\r\n            //----------]>\r\n\r\n            return this;\r\n\r\n            //----------]>\r\n\r\n            function forEach(data, callback) {\r\n                if(!data) {\r\n                    return;\r\n                }\r\n\r\n                Object.keys(data).forEach(function(field) {\r\n                    const t = field.split(/\\(([\\[\\{]?)(\\@?)([\\}\\]]?)\\)$/);\r\n\r\n                    let name,\r\n                        useHolderArray,\r\n                        holderNew,\r\n                        schema;\r\n\r\n                    //-------]>\r\n\r\n                    name = t.shift().trim();\r\n                    useHolderArray = t.shift() === \"[\";\r\n                    holderNew = t.shift() === \"@\";\r\n\r\n                    schema = data[field];\r\n\r\n                    //-------]>\r\n\r\n                    testName(name);\r\n                    callback(name, packer.createPacket(schema, useHolderArray, holderNew));\r\n                });\r\n            }\r\n\r\n            function testName(n) {\r\n                let r = [\r\n                    \"restoring\", \"restored\",\r\n                    \"open\", \"close\", \"disconnected\", \"terminated\",\r\n                    \"packet\", \"message\", \"arraybuffer\", \"error\",\r\n                    \"ping\", \"pong\"\r\n                ];\r\n\r\n                if(r.some((e) => e === n)) {\r\n                    throw new Error(`Used a reserved name: ${n}`);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        _connect(url) {\r\n            const w = this._ws = new WSocket(url);\r\n\r\n            //------------]>\r\n\r\n            w.onmessage = wsOnMessage.bind(w, this);\r\n            w.onopen = wsOnOpen.bind(w, this);\r\n            w.onclose = wsOnClose.bind(w, this);\r\n            w.onerror = wsOnError.bind(w, this);\r\n\r\n            w.binaryType = \"arraybuffer\";\r\n        }\r\n\r\n        _reconnect() {\r\n            this._connect(this.url);\r\n        }\r\n\r\n        _pack(name, data) {\r\n            const t = this._packMapByName.get(name);\r\n\r\n            //---------]>\r\n\r\n            if(!t) {\r\n                return null;\r\n            }\r\n\r\n            //---------]>\r\n\r\n            const [id, srz] = t;\r\n\r\n            //---------]>\r\n\r\n            return srz.pack(id, data);\r\n        }\r\n    }\r\n\r\n    //---------------]>\r\n\r\n    return new Io();\r\n\r\n    //---------------]>\r\n\r\n    function wsOnMessage(socket, event) {\r\n        let data = event.data;\r\n\r\n        //-----------]>\r\n\r\n        socket._emit(\"message\", data, event);\r\n\r\n        if(typeof(data) === \"string\") {\r\n            socket._emit(\"text\", data, event);\r\n\r\n            if(socket.listenerCount(\"json\")) {\r\n                try {\r\n                    data = JSON.parse(data);\r\n                }\r\n                catch(e) {\r\n                    data = void(e);\r\n                }\r\n\r\n                if(typeof(data) !== \"undefined\") {\r\n                    socket._emit(\"json\", data, event);\r\n                }\r\n            }\r\n\r\n            return;\r\n        }\r\n        else if(socket._emit(\"arraybuffer\", data, event)) {\r\n            return;\r\n        }\r\n\r\n        //-----------]>\r\n\r\n        data = new Uint8Array(data);\r\n\r\n        //-----------]>\r\n\r\n        const dataByteLength = data.byteLength;\r\n\r\n        let offset  = 0,\r\n            pkt     = data;\r\n\r\n        //-----------]>\r\n\r\n        while(offset < dataByteLength) {\r\n            const pktSchema = socket._unpackMapById[packer.getId(pkt)];\r\n\r\n            //-----------]>\r\n\r\n            if(!pktSchema) {\r\n                break;\r\n            }\r\n\r\n            //-----------]>\r\n\r\n            const [name, srz] = pktSchema;\r\n            const message = srz.unpack(pkt, offset, dataByteLength, cbMoveOffset);\r\n\r\n            //-----------]>\r\n\r\n            if(typeof(message) === \"undefined\") {\r\n                break;\r\n            }\r\n\r\n            if(dataByteLength > offset) {\r\n                pkt = data.slice(offset);\r\n            }\r\n\r\n            //-----------]>\r\n\r\n            if(socket.listenerCount(\"packet\")) {\r\n                socket._emit(\"packet\", name, message, () => socket._emit(name, message));\r\n            }\r\n            else {\r\n                socket._emit(name, message);\r\n            }\r\n        }\r\n\r\n        //-----------]>\r\n\r\n        function cbMoveOffset(size) {\r\n            offset += size;\r\n        }\r\n    }\r\n\r\n    function wsOnOpen(socket, event) {\r\n        const rcAttemptsCount = socket._reconnectionAttemptsCount;\r\n\r\n        //--------]>\r\n\r\n        socket._reconnectionAttemptsCount = 0;\r\n\r\n        if(socket.reconnecting) {\r\n            socket.reconnecting = false;\r\n            socket._emit(\"restored\", rcAttemptsCount);\r\n        }\r\n\r\n        socket._emit(\"open\");\r\n    }\r\n\r\n    function wsOnClose(socket, event) {\r\n        const {code, reason} = event;\r\n\r\n        //--------]>\r\n\r\n        socket._emit(\"close\", code, reason, event);\r\n\r\n        if(event.wasClean) {\r\n            socket._emit(\"disconnected\", code, reason, event);\r\n        }\r\n        else {\r\n            const rcAttemptsCount = socket._reconnectionAttemptsCount;\r\n\r\n            //--------]>\r\n\r\n            socket._emit(\"terminated\", code, event);\r\n\r\n            //--------]>\r\n\r\n            if(rcAttemptsCount < socket._reconnectionAttempts) {\r\n                socket._reconnectionAttemptsCount++;\r\n\r\n                setTimeout(() => {\r\n                    socket.reconnecting = true;\r\n                    socket._reconnect();\r\n\r\n                    socket._emit(\"restoring\", rcAttemptsCount);\r\n                }, socket._reconnectionDelay);\r\n            }\r\n            else {\r\n                socket.reconnecting = false;\r\n\r\n                socket._emit(\"unrestored\", rcAttemptsCount);\r\n            }\r\n        }\r\n    }\r\n\r\n    function wsOnError(socket, error) {\r\n        socket._emit(\"error\", error);\r\n    }\r\n\r\n    //--------)>\r\n\r\n    function genId() {\r\n        return crypto ? uuidv4() : guid();\r\n\r\n        //----------]>\r\n\r\n        function guid() {\r\n            return s4() + s4() + \"-\" + s4() + \"-\" + s4() + \"-\" + s4() + \"-\" + s4() + s4() + s4();\r\n\r\n            function s4() {\r\n                return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\r\n            }\r\n        }\r\n\r\n        function uuidv4() {\r\n            return ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, (c) => (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16));\r\n        }\r\n    }\r\n};\r\n\r\n})({});"]}